# DB 삭제/생성/사용
DROP DATABASE IF EXISTS SB_AM;
CREATE DATABASE SB_AM;
USE SB_AM;

# article 테이블 생성
CREATE TABLE article(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	title VARCHAR(100) NOT NULL,
	`body` TEXT NOT NULL
);

# article 테스트 데이터
INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
title = '제목1',
`body` = '내용1';

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
title = '제목2',
`body` = '내용2';

INSERT INTO article
SET regDate = NOW(),
updateDate = NOW(),
title = '제목3',
`body` = '내용3';

SELECT * FROM article
ORDER BY id DESC
LIMIT 0, 10;

SELECT COUNT(*)
FROM article;

INSERT INTO article(regDate, updateDate, title, `body`)
SELECT NOW(), NOW(), CONCAT('제목_', RAND()), CONCAT('내용_', RAND())
FROM article

DELETE FROM article

TRUNCATE article

DROP TABLE `member`

# member 테이블 생성
CREATE TABLE `member`(
	id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
	regDate DATETIME NOT NULL,
	updateDate DATETIME NOT NULL,
	loginId VARCHAR(20) NOT NULL UNIQUE,
	loginPw VARCHAR(100) NOT NULL,
	`authlevel` SMALLINT UNSIGNED NOT NULL DEFAULT 3 COMMENT '권한 레벨 (일반 = 3, 관리자 = 7)',
	`name` VARCHAR(20) NOT NULL,
	nickname VARCHAR(20) NOT NULL,
	cellphoneNum VARCHAR(20) NOT NULL,
	email VARCHAR(50) NOT NULL,
	delStatus TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '탈퇴여부 (탈퇴 전 = 0, 탈퇴 후 = 1)',
	delDate DATETIME COMMENT '탈퇴 날짜'
);

# member 테스트 데이터
INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'admin',
loginPw = 'admin',
`authlevel` = 7,
`name` = '관리자',
nickname = '관리자',
cellphoneNum = '010-1111-1111',
email = 'admin@naver.com';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test1',
loginPw = 'test1',
`name` = 'user1',
nickname = 'user1',
cellphoneNum = '010-1234-5678',
email = 'test1@naver.com';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'test2',
loginPw = 'test2',
`name` = 'user2',
nickname = 'user2',
cellphoneNum = '010-1234-1234',
email = 'test2@naver.com';

DELETE FROM `member`

TRUNCATE `member`

SELECT * FROM `member`
ORDER BY id DESC;

# article, member join
SELECT *, M.loginId AS writerId
	FROM article AS A
JOIN `member` AS M
	ON A.memberId = M.id
ORDER BY A.id DESC;
LIMIT 0, 10;

SELECT * FROM article AS A
JOIN `member` AS M
ON A.memberId = M.id
WHERE A.id = 1;

SELECT LAST_INSERT_ID()